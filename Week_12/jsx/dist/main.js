/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction createElement(type, attributes) {\n  var element;\n\n  if (typeof type === \"string\") {\n    // wrap the native HTML element\n    element = new ElementWrapper(type);\n  } else {\n    element = new type();\n  }\n\n  for (var name in attributes) {\n    element.setAttribute(name, attributes[name]);\n  }\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  for (var _i = 0, _children = children; _i < _children.length; _i++) {\n    var child = _children[_i];\n\n    if (typeof child === 'string') {\n      var textNode = new TextNodeWrapper(child);\n      element.appendChild(textNode); // appendChild must have used mountTo\n    } else {\n      element.appendChild(child); // appendChild must have used mountTo\n    }\n  }\n\n  return element;\n}\n\nvar Wrapper = /*#__PURE__*/function () {\n  function Wrapper(type, element) {\n    _classCallCheck(this, Wrapper);\n\n    if (type === 'element') {\n      this.root = document.createElement(element);\n    }\n\n    if (type === 'text') {\n      this.root = document.createTextNode(element);\n    }\n  }\n\n  _createClass(Wrapper, [{\n    key: \"mountTo\",\n    value: function mountTo(parent) {\n      // proxy of DOM API: appendChild\n      parent.appendChild(this.root);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(child) {\n      // use proxy: mountTo\n      child.mountTo(this.root);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      // DOM API\n      this.root.setAttribute(name, value);\n    }\n  }]);\n\n  return Wrapper;\n}();\n\nvar TextNodeWrapper = /*#__PURE__*/function (_Wrapper) {\n  _inherits(TextNodeWrapper, _Wrapper);\n\n  var _super = _createSuper(TextNodeWrapper);\n\n  function TextNodeWrapper(content) {\n    _classCallCheck(this, TextNodeWrapper);\n\n    return _super.call(this, 'text', content);\n  }\n\n  return TextNodeWrapper;\n}(Wrapper);\n\nvar ElementWrapper = /*#__PURE__*/function (_Wrapper2) {\n  _inherits(ElementWrapper, _Wrapper2);\n\n  var _super2 = _createSuper(ElementWrapper);\n\n  function ElementWrapper(type) {\n    _classCallCheck(this, ElementWrapper);\n\n    return _super2.call(this, 'element', type);\n  }\n\n  return ElementWrapper;\n}(Wrapper);\n\nvar MyDiv = /*#__PURE__*/function (_Wrapper3) {\n  _inherits(MyDiv, _Wrapper3);\n\n  var _super3 = _createSuper(MyDiv);\n\n  function MyDiv() {\n    _classCallCheck(this, MyDiv);\n\n    return _super3.call(this, 'element', 'div');\n  }\n\n  return MyDiv;\n}(Wrapper);\n\nvar a = createElement(MyDiv, {\n  id: \"a\",\n  \"class\": \"cls\"\n}, createElement(\"span\", null, \"Hello\"), createElement(\"br\", null), createElement(\"span\", null, \"Bonjour\"));\na.mountTo(document.body);\n\n//# sourceURL=webpack://jsx/./main.js?");
/******/ })()
;